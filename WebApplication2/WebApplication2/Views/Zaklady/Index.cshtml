@model WebApplication2.Models.ViewModel.BetSetGetView
@{
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<div class="container_page_zaklady">
<div class="choice_race">
<h2>Wybierz wyscig do zakladu</h2>
    <form method="post">
        <label class="control-label" for="date">Data wyscigu</label>
        <input class="form-control" id="date_picker" name="date_picker" placeholder="MM/DD/YYY" type="text" />
        <input id="Submit_race" type="submit" value="zatwierdz" class="btn btn-default"/>
    </form>
</div>

<div class="choice_race_bet">
    <form action="/Zaklady/dodaj" method="post" class="form-inline">
        <h2>Obstaw</h2>

        <!-- Wyswietla napis o dodaniu zakladu-->
        <span class="alert-success">@ViewBag.Status</span>
        <!-- Wyswietla napis, ze dane sie nie zgadzaja-->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <p>1 miejsce</p>
            <p>
                @Html.DropDownListFor(model => model.betSetView.Driver_Name1, ViewBag.KategoriaList as IEnumerable<SelectListItem>, "Wybierz")
                <!-- wyświetla sie, gdy nie wpisano hasla i nacisnieto przycisk "zmien"-->
                @Html.ValidationMessageFor(model => model.betSetView.Driver_Name1, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <p>2 miejsce</p>
            <p>
                @Html.DropDownListFor(model => model.betSetView.Driver_Name2, ViewBag.KategoriaList as IEnumerable<SelectListItem>, "Wybierz")
                @Html.ValidationMessageFor(model => model.betSetView.Driver_Name2, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <p>3 miejsce</p>
            <p>
                @Html.DropDownListFor(model => model.betSetView.Driver_Name3, ViewBag.KategoriaList as IEnumerable<SelectListItem>, "Wybierz")
                @Html.ValidationMessageFor(model => model.betSetView.Driver_Name3, "", new { @class = "text-danger" })
            </p>
        </div>




        <h2>Najlepsze okrazenie</h2>


        <div class="form-group">

            <p>najlepsze okrazenie</p>
            <p>
                @Html.DropDownListFor(model => model.betSetView.Driver_Time1, ViewBag.KategoriaList as IEnumerable<SelectListItem>, "Wybierz")
                @Html.ValidationMessageFor(model => model.betSetView.Driver_Time1, "", new { @class = "text-danger" })
            </p>

        </div>
        <div>
            <input id="Button_login" type="submit" value="Zatwierdź zmiany" class="btn btn-default" />
        </div>
    </form>

   
</div>
</div>
<div class="table" id="table_race">
    <div>
        <h1>Twoje zaklady</h1>
        <form action="/Zaklady/wyswietl" method="post">
            <p>

                @Html.DropDownListFor(model => model.betGetView.selectedTrack, ViewBag.Wyscig1 as IEnumerable<SelectListItem>, "Wybierz", new { @onchange = "this.form.submit();" })
                @Html.ValidationMessageFor(model => model.betGetView.selectedTrack, "", new { @class = "text-danger" })
            </p>

        </form>
        <table id="tabela_js_show" class="table table-striped" style="width:100%;">
            <thead>
                <tr>
                    <th>opcja</th>
                    <th>wybrany zawodnik</th>
                    <th>zawodnik z wyscigu</th>
                    <th>zdobyte punkty</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1 zawodnik</td>
                    <td>@Html.DisplayFor(model => model.betGetView.betPos1)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.racePos1)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.scorePos1)</td>
                </tr>

                <tr>
                    <td>2 zawodnik</td>
                    <td>@Html.DisplayFor(model => model.betGetView.betPos2)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.racePos2)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.scorePos2)</td>
                </tr>

                <tr>
                    <td>3 zawodnik</td>
                    <td>@Html.DisplayFor(model => model.betGetView.betPos3)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.racePos3)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.scorePos3)</td>
                </tr>

                <tr>
                    <td>najlepsze okrazenie</td>
                    <td> @Html.DisplayFor(model => model.betGetView.betTime1)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.raceTime1)</td>
                    <td>@Html.DisplayFor(model => model.betGetView.scoreTime1)</td>
                </tr>

            </tbody>
        </table>
    </div>
</div>

<h1>Wynik calkowity wyscigu</h1>
<h3>@Html.DisplayFor(model => model.betGetView.scoreSum)</h3>


<script>


    var SelectedDates = [];
    SelectedDates[0] = { date_race: new Date("2017-01-01T00:00:00+01:00"), describ: "wyscig1" }
    SelectedDates[1] = { date_race: new Date("2017-01-20T00:00:00+01:00"), describ: "wyscig2" }

    $(document).ready(function () {


      var date_input=$('input[name="date_picker"]'); //our date input has the name "date"
      var container=$('.bootstrap-iso form').length>0 ? $('.bootstrap-iso form').parent() : "body";
      var options={
        format: 'yyyy//mm/dd',
        container: container,
        todayHighlight: true,
        autoclose: true,
      };
      date_input.datepicker(options);

     
    })


    $('#date_picker').datepicker({
        beforeShowDay: function (date) {

            var len = SelectedDates.length;

            for (i = 0; i < len; i++) {
                if (SelectedDates[i].date_race.toString() == date) {
                    return {
                        enabled: true,
                        tooltip: SelectedDates[i].describ
                    };
                }

            }
            return {
               enabled: false
            };
            /* tutaj klasa niieaktywna */
        }
    });

</script>