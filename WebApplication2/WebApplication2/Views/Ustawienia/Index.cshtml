@model WebApplication2.Models.ViewModel.UserSettingView
@{
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}






<div class="container">

    <div class="row">
        <!--pierwsza kolumna-->
        <div class="col-md-4">

            <!--link do obrazka -->
            <img src="http://dblots.pl/images/avatars/15479139565570bbaa70320.png" class="img-rounded" alt="avatar" width="200" height="200">

            <!-- przycisk obslugujacy zmiane avatara (okienko  z wyborem do wskazania pliku powinno wyskoczyc)-->
            <input id="Button_Avatar" type="button" value="zmien" class="btn btn-default" />

            <!-- Formularz dotyczacy zmiany hasla--->
            @using (Html.BeginForm("Zmiana_hasla", "Ustawienia", FormMethod.Post ))
            {


                @Html.AntiForgeryToken()
                     <!-- Wyswietla napis powodzenia zmiany email/hasla-->
                <span class="alert-success">@ViewBag.Status</span>

                    <!-- Wyswietla napis, ze dane sie nie zgadzaja-->
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div>
                        <h2>Haslo</h2>
                    </div>

                    <div>
                        <label>podaj stare haslo</label>
                    </div>
                    <form>
                        <!--  podawane stare haslo do sprawdzenia z starymzapisanym w bd podczas zmiany hasla -->
                        <div>
                            @Html.EditorFor(model => model.passwordView.oldPassword, new { htmlAttributes = new { id = "old_password" } })
                        </div>
                        <!-- wyświetla sie, gdy nie wpisano hasla i nacisnieto przycisk "zmien"-->
                        @Html.ValidationMessageFor(model => model.passwordView.oldPassword, "", new { @class = "text-danger" })

                        <div>
                            <label>podaj nowe haslo</label>
                        </div>

                        <!-- input z nowym haslem  -->
                        <div>
                            @Html.EditorFor(model => model.passwordView.Password, new { htmlAttributes = new { id = "Password_input" } })
                            <span class="glyphicon glyphicon-eye-open" onmousedown="Password_input.type='text'" ; onmouseup="Password_input.type='password'"></span>
                        </div>
                        <!-- wyświetla sie, gdy nie wpisano hasla i nacisnieto przycisk "zmien"-->
                        @Html.ValidationMessageFor(model => model.passwordView.Password, "", new { @class = "text-danger" })

                        <!--  przycisk do zmiany  hasla-->
                        <div>
                            <input type="submit" value="Zmień" class="btn btn-default" />
                        </div>
                    </form>
            }

            <div>

                <h2>Usun konto</h2>

                <!-- fpormularz do usuwania konta w sumie to zostawilem z tego co dawid wrzucil-->
                @using (Html.BeginForm("Usuniecie_konta", "Ustawienia", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                    <form>
                    @Html.AntiForgeryToken()

                    <label>Potwierdz czy na pewno chcesz usunac konto</label>

                    @Html.EditorFor(model => model.deleteUserView.deleteU)

                    <input type="submit" value="Usuń konto" class="btn btn-default" />
                           </form>
                }
            </div>
        </div>

        <!--druga kolumna-->
        <div class="col-md-8">
            @using (Html.BeginForm("Zmiana_opisu", "Ustawienia", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div>
                    <h2>O mnie</h2>
                </div>
                <div>
                    <!--tutaj powinien byc aktualny opis wyswietlany jaki uzytkownik mai uzytkownik do niego moze nowy wpisac-->
                    @Html.TextAreaFor(model => model.userDescriptionView.description,  new { @id = "describ_user", @rows = 10, @cols = 40, @placeholder = Html.DisplayFor(n => n.userDescriptionView.description) })
                </div>
                <div>
                    <!--przycisk do zatwierdzenia zmian w opise-->
                    <input id="Button_describe" type="submit" value="zmien" class="btn btn-default" />
                </div>
            }

            <!--formularz dotyczacy zmiany adresu email-->
            @using (Html.BeginForm("Zmiana_email", "Ustawienia", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <div>
                    <!-- wyswietla aktualny email-->
                    @Html.DisplayFor(model => model.emailView.email)
                </div>
                <div>
                    <label>adres email</label>
                </div>
                <form>
                    <div>
                        <!--input wyswietlajacy aktualny adres email z mozliwoscia wpisana nowego-->
                        @Html.EditorFor(model => model.emailView.newEmail, new { htmlAttributes = new { id = "email" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.emailView.newEmail, "", new { @class = "text-danger" })
                    <div>
                        <!-- przycisk zatwierdzajcy zmiane adresu email -->
                        <input type="submit" value="Zmień" class="btn btn-default" />
                    </div>
                </form>
            }

        </div>

    </div>
</div>
